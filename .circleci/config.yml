version: 2.1

jobs:
  test:
    machine:
      image: circleci/classic:201808-01

    environment:
      K8S_VERSION: v1.15.3
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v1.4.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
      CHANGE_MINIKUBE_NONE_USER: true
      DOCKER_LATEST: 1

    steps:
      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

      - run:
          name: Start minikube
          background: true
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}

      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config

      - checkout

      - run:
          name: Wait for minikube
          command: |
            timeout 180s bash \<<EOT
              set -o pipefail
              function is_ready()
              {
                kubectl get nodes -o json \
                  | jq '.items[].status.conditions[] | select(.type=="Ready" and .status=="True")'
              }

              until is_ready
              do
                sleep 1
              done
            EOT

      - run:
          name: Install helm
          command: |
            curl -L https://git.io/get_helm.sh | bash
            helm init --wait

      - run:
          name: Install chart dependencies
          command: |
            helm dependency build .

      - run:
          name: Install chart
          command: |
            helm install . \
                --name redash \
                --wait \
                || \
                (
                  # In case of error, try to display some debug logs
                  kubectl get all
                  export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=redash,app.kubernetes.io/instance=redash" -o jsonpath="{.items[0].metadata.name}")
                  echo "INSTALL LOGS"
                  echo "############"
                  kubectl logs --tail=40 -c redash-server-createdb "${POD_NAME}"
                  echo "SERVER LOGS"
                  echo "###########"
                  kubectl logs --tail=20 "${POD_NAME}"
                )
            helm status redash

      - run:
          name: Smoke test
          # TODO: Look into moving this into helm test and reusing offical front-end tests
          command: |
            export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=redash,app.kubernetes.io/instance=redash" -o jsonpath="{.items[0].metadata.name}")
            kubectl port-forward "${POD_NAME}" 8080:5000 &
            curl -sL http://127.0.0.1:8080 | fgrep 'Welcome to Redash'
            kill $(jobs -pr)

workflows:
  version: 2
  ci:
    jobs:
      - test
