## Default values for Redash.

image:
  registry: docker.io
  # image.repo -- Redash image name used for server and worker pods
  repo: redash/preview
  # image.tag -- Redash image [tag](https://hub.docker.com/r/redash/redash/tags)
  tag:
  # image.pullPolicy - Image pull policy
  pullPolicy: IfNotPresent

# imagePullSecrets -- Name(s) of secrets to use if pulling images from a private registry
imagePullSecrets: []
# nameOverride - Override the autogenerated release name based chart name
nameOverride: ""
fullnameOverride: ""

# env -- Redash global environment variables - applied to both server and worker containers.
env:
  PYTHONUNBUFFERED: 0
  REDASH_PRODUCTION: "true"

# initContainers -- Redash global init containers
initContainers: []

# volumes -- Redash global volumes configuration - applied to all containers
volumes: []

# volumeMounts -- Redash global volume mounts configuration - applied to all containers
volumeMounts: []

## Service account and security context configuration
serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

## Redash application configuration
redash:
  ## Start primary Redash configuration
  ## Note that we document the Redash defaults, but don't explicitly set them.
  ## This allows multiple versions of Redash (which may have different defaults) to be more easily used
  # -- disables all chart managed secrets providing an ability to set them using redash.envSecretName. Useful, while using together with external secrets
  selfManagedSecrets: false
  # -- REQUIRED `REDASH_SECRET_KEY` value. Secret key used for data encryption. Stored as a Secret value.
  secretKey: test
  # -- `REDASH_SAML_SCHEME_OVERRIDE` value. This setting will allow you to override the saml auth url scheme that gets constructed by flask. this is a useful feature if, for example, you're behind a proxy protocol enabled tcp load balancer (aws elb that terminates ssl) and your nginx proxy or similar adds a x-forwarded-proto of http even though your redash url for saml auth is https..
  samlSchemeOverride: ""
  # -- `REDASH_DISABLE_PUBLIC_URLS` value. Whether to disable access to public urls.
  # @default -- "false"
  disablePublicUrls: ""
  # -- `REDASH_BLOCKED_DOMAINS` value. Comma separated of email domains that cannot create user accounts.
  # @default -- "qq.com"
  blockedDomains: ""
  # -- `REDASH_PROXIES_COUNT` value. Passed to werkzeug's [proxyfix](https://werkzeug.palletsprojects.com/en/2.1.x/middleware/proxy_fix/) to make sure we get the right referral address even behind proxies like nginx..
  # @default -- 1
  proxiesCount: ""
  # -- `REDASH_STATSD_HOST` value. Host for statsd daemon.
  # @default -- 127.0.0.1
  statsdHost: ""
  # -- `REDASH_STATSD_PORT` value. Port for statsd daemon.
  # @default -- 8125
  statsdPort: ""
  # -- `REDASH_STATSD_PREFIX` value. Prefix for metrics sent to statsd daemon.
  # @default -- redash
  statsdPrefix: ""
  # -- `REDASH_STATSD_USE_TAGS` value. Whether to use tags in statsd metrics (influxdb’s format).
  # @default -- false
  statsdUseTags: ""
  # -- `REDASH_QUERY_RESULTS_CLEANUP_ENABLED` value. Whether the job to cleanup unused query results should run automatically.
  # @default -- true
  queryResultsCleanupEnabled: ""
  # -- `REDASH_QUERY_RESULTS_CLEANUP_COUNT` value. The number of results to cleanup during each call to `cleanup_query_results`.
  # @default -- 100
  queryResultsCleanupCount: ""
  # -- `REDASH_QUERY_RESULTS_CLEANUP_MAX_AGE` value. Integer number of days, past which a query result may be cleaned up if it is not referenced by another query..
  # @default -- 7
  queryResultsCleanupMaxAge: ""
  # -- `REDASH_SCHEMAS_REFRESH_SCHEDULE` value. How often to refresh the data source schemas (in minutes).
  # @default -- 30
  schemasRefreshSchedule: ""
  # -- `REDASH_AUTH_TYPE` value. May be either `api_key` or `hmac`. implemented [here](https://github.com/getredash/redash/pull/385).
  # @default -- api_key
  authType: ""
  # -- `REDASH_ENFORCE_HTTPS` value. This is passed to [flask-talisman](https://github.com/googlecloudplatform/flask-talisman).
  # @default -- false
  enforceHttps: ""
  # -- `REDASH_INVITATION_TOKEN_MAX_AGE` value. An integer number of seconds after which an invitation link will expire.
  # @default -- 60 _ 60 _ 24 \* 7
  invitationTokenMaxAge: ""
  # -- `REDASH_MULTI_ORG` value. Whether to enable multi-org mode. **note**: multi-org mode is not documented or supported at this time.
  # @default -- false
  multiOrg: ""
  # -- `REDASH_GOOGLE_CLIENT_ID` value. The client id to use for google login, be sure to set a client secret as well.
  googleClientId: ""
  # -- `REDASH_GOOGLE_CLIENT_SECRET` value. The client secret to use for google login, be sure to set a client id as well. Stored as a Secret value.
  googleClientSecret: ""
  # -- `REDASH_REMOTE_USER_LOGIN_ENABLED` value. Enables the use of an externally-provided and trusted remote user via an http header. the "user" must be an email address. [more details](https://github.com/getredash/redash/blob/e6ebef1e5ab866ce1e706eaee6260edaffdc2bd7/redash/settings/__init__.py#l185-l207).
  # @default -- false
  remoteUserLoginEnabled: ""
  # -- `REDASH_REMOTE_USER_HEADER` value. Name of header to use if `redash_remote_user_login_enabled` is true.
  # @default -- X-Forwarded-Remote-User
  remoteUserHeader: ""
  # -- `REDASH_LDAP_LOGIN_ENABLED` value.
  # @default -- false
  ldapLoginEnabled: ""
  # -- `REDASH_LDAP_URL` value.
  # @default -- None
  ldapUrl: ""
  # -- `REDASH_LDAP_BIND_DN` value.
  # @default -- None
  ldapBindDn: ""
  # -- `REDASH_LDAP_BIND_DN_PASSWORD` value. Stored as a Secret value.
  ldapBindDnPassword: ""
  # -- `REDASH_LDAP_DISPLAY_NAME_KEY` value.
  # @default -- displayName
  ldapDisplayNameKey: ""
  # -- `REDASH_LDAP_EMAIL_KEY` value.
  # @default -- mail
  ldapEmailKey: ""
  # -- `REDASH_LDAP_CUSTOM_USERNAME_PROMPT` value.
  # @default -- LDAP/AD/SSO username:
  ldapCustomUsernamePrompt: ""
  # -- `REDASH_LDAP_SEARCH_TEMPLATE` value.
  # @default -- (cn=%(username)s)
  ldapSearchTemplate: ""
  # -- `REDASH_LDAP_SEARCH_DN` value.
  # @default -- REDASH_SEARCH_DN
  ldapSearchDn: ""
  # -- `REDASH_STATIC_ASSETS_PATH` value. Directory that contains all front-end assets. relative to the ./redash directory.
  # @default -- ”../client/dist/”
  staticAssetsPath: ""
  # -- `REDASH_JOB_EXPIRY_TIME` value. Ttl in seconds for jobs placed in queue. if a job is not picked up by a worker within this ttl it will expire..
  # @default -- 3600 \* 12
  jobExpiryTime: ""
  # -- REQUIRED `REDASH_COOKIE_SECRET` value. Required. used for various cryptographic features of the web server. read more about how redash uses secret keys [here]({% link _kb/open-source/admin-guide/secrets.md %}). Stored as a Secret value.
  cookieSecret: test
  # -- `REDASH_LOG_LEVEL` value. Logging messages which are less severe than level will be ignored. read more about python logging [here](https://docs.python.org/3/library/logging.html).
  # @default -- INFO
  logLevel: ""
  # -- `REDASH_MAIL_SERVER` value.
  # @default -- localhost
  mailServer: ""
  # -- `REDASH_MAIL_PORT` value.
  # @default -- 25
  mailPort: ""
  # -- `REDASH_MAIL_USE_TLS` value.
  # @default -- false
  mailUseTls: ""
  # -- `REDASH_MAIL_USE_SSL` value.
  # @default -- false
  mailUseSsl: ""
  # -- `REDASH_MAIL_USERNAME` value.
  # @default -- None
  mailUsername: ""
  # -- `REDASH_MAIL_PASSWORD` value. Stored as a Secret value.
  # @default -- None
  mailPassword: ""
  # -- `REDASH_MAIL_DEFAULT_SENDER` value.
  # @default -- None
  mailDefaultSender: ""
  # -- `REDASH_MAIL_MAX_EMAILS` value.
  # @default -- None
  mailMaxEmails: ""
  # -- `REDASH_MAIL_ASCII_ATTACHMENTS` value.
  # @default -- false
  mailAsciiAttachments: ""
  # -- `REDASH_HOST` value. The url host used in emails sent to users (invites, alerts, notifications) etc..
  host: ""
  # -- `REDASH_ALERTS_DEFAULT_MAIL_SUBJECT_TEMPLATE` value. Subject used for email alert notifications. `{state}` and `{alert_name}` are the only available variables..
  # @default -- ({state}) {alert_name}
  alertsDefaultMailSubjectTemplate: ""
  # -- `REDASH_THROTTLE_LOGIN_PATTERN` value. The [flask-limiter](https://flask-limiter.readthedocs.io/en/stable/) string pattern used to rate limit requests to the /login route..
  # @default -- 50/hour
  throttleLoginPattern: ""
  # -- `REDASH_LIMITER_STORAGE` value. Mapped directly to flask-limiter's [storage_uri](https://flask-limiter.readthedocs.io/en/stable/configuration.html?highlight=limiter_storage#ratelimit_storage_uri)..
  # @default -- REDIS_URL
  limiterStorage: ""
  # -- `REDASH_CORS_ACCESS_CONTROL_ALLOW_ORIGIN` value.
  corsAccessControlAllowOrigin: ""
  # -- `REDASH_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS` value.
  # @default -- false
  corsAccessControlAllowCredentials: ""
  # -- `REDASH_CORS_ACCESS_CONTROL_REQUEST_METHOD` value.
  # @default -- GET, POST, PUT
  corsAccessControlRequestMethod: ""
  # -- `REDASH_CORS_ACCESS_CONTROL_ALLOW_HEADERS` value.
  # @default -- Content-Type
  corsAccessControlAllowHeaders: ""
  # -- `REDASH_ENABLED_QUERY_RUNNERS` value. Comma-separated list of query runners to be enabled (e.g. `redash.query_runner.pg,redash.query_runner.mysql`).
  # @default -- ”,”.join(default_query_runners)
  enabledQueryRunners: ""
  # -- `REDASH_ADDITIONAL_QUERY_RUNNERS` value. Comma-separated list of non-default query runners to be enabled.
  additionalQueryRunners: ""
  # -- `REDASH_DISABLED_QUERY_RUNNERS` value. Comma-separated list of query runners that will not appear in redash.
  disabledQueryRunners: ""
  # -- `REDASH_SCHEDULED_QUERY_TIME_LIMIT` value. Time limit for scheduled queries (in seconds).
  # @default -- None
  scheduledQueryTimeLimit: ""
  # -- `REDASH_ADHOC_QUERY_TIME_LIMIT` value. Time limit for adhoc queries (in seconds).
  # @default -- None
  adhocQueryTimeLimit: ""
  # -- `REDASH_ENABLED_DESTINATIONS` value. Comma-separated list of alert destinations to be enabled (e.g. `redash.destinations.email,redash.destinations.slack` ).
  # @default -- ”,”.join(default_destinations)
  enabledDestinations: ""
  # -- `REDASH_ADDITIONAL_DESTINATIONS` value. Comma-separated list of non-default alert destinations to be enabled.
  additionalDestinations: ""
  # -- `REDASH_EVENT_REPORTING_WEBHOOKS` value. Comma-separated list of webhook urls that to which events will be forwarded.
  eventReportingWebhooks: ""
  # -- `REDASH_SENTRY_DSN` value.
  sentryDsn: ""
  # -- `REDASH_ALLOW_SCRIPTS_IN_USER_INPUT` value. Disable sanitization of text input, allowing full html.
  # @default -- false
  allowScriptsInUserInput: ""
  # -- `REDASH_DASHBOARD_REFRESH_INTERVALS` value. Comma-separated list of integer seconds that will be allowed for dashboard refresh.
  # @default -- 60,300,600,1800,3600,43200,86400
  dashboardRefreshIntervals: ""
  # -- `REDASH_QUERY_REFRESH_INTERVALS` value. Comma-separated list of integer seconds that will be allowed for scheduled query refresh.
  # @default -- 60, 300, 600, 900, 1800, 3600, 7200, 10800, 14400, 18000, 21600, 25200, 28800, 32400, 36000, 39600, 43200, 86400, 604800, 1209600, 2592000
  queryRefreshIntervals: ""
  # -- `REDASH_PASSWORD_LOGIN_ENABLED` value. Toggle to allow password login. often disabled if google login, saml, ldap, or remote_user_login are enabled..
  # @default -- true
  passwordLoginEnabled: ""
  # -- `REDASH_SAML_METADATA_URL` value.
  samlMetadataUrl: ""
  # -- `REDASH_SAML_ENTITY_ID` value.
  samlEntityId: ""
  # -- `REDASH_SAML_NAMEID_FORMAT` value.
  samlNameidFormat: ""
  # -- `REDASH_DATE_FORMAT` value. Moment.js format to be used throughout the web application.
  # @default -- DD/MM/YY
  dateFormat: ""
  # -- `REDASH_JWT_LOGIN_ENABLED` value.
  # @default -- false
  jwtLoginEnabled: ""
  # -- `REDASH_JWT_AUTH_ISSUER` value.
  jwtAuthIssuer: ""
  # -- `REDASH_JWT_AUTH_PUBLIC_CERTS_URL` value.
  jwtAuthPublicCertsUrl: ""
  # -- `REDASH_JWT_AUTH_AUDIENCE` value.
  jwtAuthAudience: ""
  # -- `REDASH_JWT_AUTH_ALGORITHMS` value.
  # @default -- HS256,RS256,ES256
  jwtAuthAlgorithms: ""
  # -- `REDASH_JWT_AUTH_COOKIE_NAME` value.
  jwtAuthCookieName: ""
  # -- `REDASH_JWT_AUTH_HEADER_NAME` value.
  jwtAuthHeaderName: ""
  # -- `REDASH_FEATURE_SHOW_QUERY_RESULTS_COUNT` value. Disable/enable showing count of query results in status.
  # @default -- true
  featureShowQueryResultsCount: ""
  # -- `REDASH_VERSION_CHECK` value. Toggle whether to periodically check if a newer version of redash is available..
  # @default -- true
  versionCheck: ""
  # -- `REDASH_FEATURE_DISABLE_REFRESH_QUERIES` value. Disable scheduled query execution.
  # @default -- false
  featureDisableRefreshQueries: ""
  # -- `REDASH_FEATURE_SHOW_PERMISSIONS_CONTROL` value. Enable experimental multiple owners support.
  # @default -- false
  featureShowPermissionsControl: ""
  # -- `REDASH_FEATURE_ALLOW_CUSTOM_JS_VISUALIZATIONS` value. Enable the custom visualization option. this appears as a sub-type of "chart" visualizations in the ui..
  # @default -- false
  featureAllowCustomJsVisualizations: ""
  # -- `REDASH_FEATURE_AUTO_PUBLISH_NAMED_QUERIES` value. Automatically publish a new query after its name is changed from "new query".
  # @default -- true
  featureAutoPublishNamedQueries: ""
  # -- `REDASH_BIGQUERY_HTTP_TIMEOUT` value. Http timeout for the bigquery query runner.
  # @default -- 600
  bigqueryHttpTimeout: ""
  # -- `REDASH_SCHEMA_RUN_TABLE_SIZE_CALCULATIONS` value. Enable showing the size of each table in the schema browser..
  # @default -- false
  schemaRunTableSizeCalculations: ""
  # -- `REDASH_WEB_WORKERS` value. How many processes will gunicorn spawn to handle web requests.
  # @default -- 4
  webWorkers: ""
  ## End primary Redash configuration

  # -- `SQLALCHEMY_ENABLE_POOL_PRE_PING` value, controls whether the database connection that's in the pool will be checked by pinging before being used or not. See https://docs.sqlalchemy.org/en/13/core/pooling.html#sqlalchemy.pool.Pool.params.pre_ping
  # @default -- true
  sqlAlchemyEnablePoolPrePing: "true"
  # redash.existingSecret -- Name of existing secret to use instead of either the values above
  ## This secret must contain keys matching the items marked "Stored as a Secret value" above.
  # existingSecret:

## Configuration for Redash web server
server:
  # server.httpPort -- Server container port (only useful if you are using a customized image)
  httpPort: 5000

  # server.initContainers -- Server init containers configuration
  initContainers: []

  # server.env -- Redash server specific environment variables
  # Don't use this for variables that are in the configuration above, however.
  env: {}

  # server.replicaCount -- Number of server pods to run
  replicaCount: 1

  # server.resources -- Server resource requests and limits [ref](http://kubernetes.io/docs/user-guide/compute-resources/)
  resources:
    {}
    # limits:
    #   cpu: 500m
    #   memory: 3Gi
    # requests:
    #   cpu: 100m
    #  memory: 500Mi

  # server.livenessProbe -- Server liveness probe configuration
  livenessProbe:
    # Redash can take a while to come up initially, so we delay checks.
    initialDelaySeconds: 90
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  
  # server.readinessProbe -- Server readiness probe configuration 
  readinessProbe:
    initialDelaySeconds: 10
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  # server.podSecurityContext -- Security contexts for server pod assignment [ref](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}
  securityContext: {}

  # server.nodeSelector -- Node labels for server pod assignment [ref](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}

  # server.tolerations -- Tolerations for server pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
  tolerations: []

  # server.affinity -- Affinity for server pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  # server.podAnnotations -- Annotations for server pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  podAnnotations: {}

  # server.podLabels -- Labels for server pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  podLabels: {}

  # server.volumes -- Volumes for server pod assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumes: []

  # server.volumeMounts -- VolumeMounts for server pod assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumeMounts: []

service:
  # service.annotations -- Annotations to add to the service
  annotations: {}
  # service.loadBalancerIP -- Specific IP address to use for cloud providers such as Azure Kubernetes Service [ref](https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer)
  loadBalancerIP:
  # service.type -- Kubernetes Service type
  type: ClusterIP
  # service.externalTraffucPolicy -- external traffic policy for Load Balancer
  externalTrafficPolicy: ""
  # service.port -- Service external port
  port: 80

ingress:
  # ingress.enabled -- Enable ingress controller resource
  enabled: false
  # ingress.annotations -- Ingress annotations configuration
  annotations: {}

  # ingress.ingressClassName -- Sets the ingress controller class name to use.
  ingressClassName: ""

  # ingress.hosts -- Ingress resource hostnames and path mappings
  hosts:
    - host: chart-example.local
      paths: []

  #ingress.pathType -- How ingress paths should be treated.
  pathType: Prefix

  # ingress.tls -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Configuration for Redash workers
workers:
  adhoc:
    # workers.adhoc.env -- Redash ad-hoc worker specific environment variables.
    env:
      QUEUES: queries
      WORKERS_COUNT: 2
  scheduled:
    # workers.scheduled.env -- Redash scheduled worker specific environment variables.
    env:
      QUEUES: scheduled_queries,schemas
      WORKERS_COUNT: 1
  generic:
    # workers.generic.env -- Redash generic worker specific environment variables.
    env:
      QUEUES: periodic,emails,default
      WORKERS_COUNT: 1

## Common worker configuration, which can be overidden for each worker at workers.<workerName>
worker:
  # worker.replicaCount -- Default number of worker pods to run
  replicaCount: 1

  # worker.initContainers -- Worker default init containers configuration
  initContainers: []

  # worker.resources -- Worker default resource requests and limits [ref](http://kubernetes.io/docs/user-guide/compute-resources/)
  resources:
    # limits:
    #   cpu: 500m
    #   memory: 3Gi
    # requests:
    #   cpu: 100m
    #  memory: 500Mi

  # worker.podSecurityContext -- Default worker's security context pod assignment [ref](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}
  securityContext: {}

  # worker.nodeSelector -- Default node labels for worker pod assignment [ref](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}

  # worker.tolerations -- Default tolerations for worker pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
  tolerations: []

  # worker.affinity -- Default affinity for worker pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  # worker.podAnnotations -- Default annotations for worker pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  podAnnotations: {}

  # worker.podLabels -- Default labels for worker pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  podLabels: {}

  # worker.volumes -- Default volumes for pod worker assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumes: []

  # worker.volumeMounts -- Default VolumeMounts for worker pod assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumeMounts: []

  # worker.livenessProbe -- Default worker's liveness probe to ensure workers are running fine
  livenessProbe:
    exec:
      command:
        - /bin/sh
        - -c
        - /app/bin/docker-entrypoint workers_healthcheck
    timeoutSeconds: 10
    initialDelaySeconds: 60
    periodSeconds: 100

## Configuration for Redash scheduler
scheduler:
  # scheduler.env -- Redash scheduler specific environment variables.
  env: {}

  # scheduler.replicaCount -- Number of scheduler pods to run
  replicaCount: 1

  # scheduler.initContainers -- Redash scheduler init containers configuration.
  initContainers: []

  # scheduler.resources -- scheduler resource requests and limits [ref](http://kubernetes.io/docs/user-guide/compute-resources/)
  resources:
  # limits:
  #   cpu: 500m
  #   memory: 3Gi
  # requests:
  #   cpu: 100m
  #  memory: 500Mi

  # scheduler.podSecurityContext -- Security contexts for scheduler pod assignment [ref](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}
  securityContext: {}

  # scheduler.livenessProbe -- Liveness probe for scheduler to ensure workers are running fine
  livenessProbe:
    exec:
      command:
        - /bin/sh
        - -c
        - /app/bin/docker-entrypoint workers_healthcheck
    timeoutSeconds: 10
    initialDelaySeconds: 60
    periodSeconds: 100

  # scheduler.nodeSelector -- Node labels for scheduler pod assignment [ref](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}

  # scheduler.tolerations -- Tolerations for scheduler pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
  tolerations: []

  # scheduler.affinity -- Affinity for scheduler pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  # scheduler.podAnnotations -- Annotations for scheduler pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  podAnnotations: {}

  # scheduler.podLabels -- Labels for scheduler pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  podLabels: {}

  # scheduler.volumes -- Volumes for scheduler pod  assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumes: []

  # scheduler.volumeMounts -- VolumeMounts for scheduler pod assignment [ref](https://kubernetes.io/docs/concepts/storage/volumes/)
  volumeMounts: []

## Configuration for migrations hook
migrations:
  # migrations.volumes -- volumes that will be mounted to migrations pods only
  volumes: []

  # migrations.initContainers -- migrations init container configuration
  initContainers: []

  # migrations.volumeMounts -- volume mounts for migrations pods
  volumeMounts: []

  # migrations.ttlSecondsAfterFinished -- ttl for install job [ref](https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/)
  ttlSecondsAfterFinished: 600
  # migrations.resources -- Scheduled worker resource requests and limits [ref](http://kubernetes.io/docs/user-guide/compute-resources/)
  resources:
  # limits:
  #   cpu: 500m
  #   memory: 3Gi
  # requests:
  #   cpu: 100m
  #  memory: 500Mi

  # migrations.podSecurityContext -- Security contexts for scheduled worker pod assignment [ref](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}
  securityContext: {}

  # migrations.nodeSelector -- Node labels for scheduled worker pod assignment [ref](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}

  # migrations.tolerations -- Tolerations for server pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
  tolerations: []

  # migrations.affinity -- Affinity for scheduled worker pod assignment [ref](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
  affinity: {}

  # migrations.podAnnotations -- Annotations for scheduled worker pod assignment [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  podAnnotations: {}

  # migrations.podLabels -- Labels for migration pod [ref](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  podLabels: {}

# externalPostgreSQL -- External PostgreSQL configuration. To use an external PostgreSQL instead of the automatically deployed postgresql chart: set postgresql.enabled to false then uncomment and configure the externalPostgreSQL connection URL (e.g. postgresql://user:pass@host:5432/database)
externalPostgreSQL:
# externalPostgreSQLSecret -- Read external PostgreSQL configuration from a secret. This should point at a secret file with a single key which specifies the connection string.
externalPostgreSQLSecret:
  {}
  # name: redash-postgres
  # key: connectionString

# envSecretName -- DEPRECIATED, use externalPostgreSQLSecret/externalRedisSecret instead. Contents of this secret will be loaded as environment variables into the container. Useful e.g. to set to set PostgreSQL password in externalPostgreSQL parameter: postgresql://user:$(POSTGRESQL_PASSWORD)@host:5432/database [ref](https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/#using-environment-variables-inside-of-your-config)
# envSecretName:

## Configuration values for the postgresql dependency. This PostgreSQL instance is used by default for all Redash state storage [ref](https://github.com/bitnami/charts/blob/main/bitnami/postgresql/README.md)
postgresql:
  # postgresql.enabled -- Whether to deploy a PostgreSQL server to satisfy the applications database requirements. To use an external PostgreSQL set this to false and configure the externalPostgreSQL parameter.
  enabled: true
  primary:
    service:
      ports:
        postgresql: 5432
  auth:
    # postgresql.auth.username -- PostgreSQL username for redash user (when postgresql chart enabled)
    username: redash
    # postgresql.auth.password -- REQUIRED: PostgreSQL password for redash user (when postgresql chart enabled)
    password:
  # postgresql.auth.database -- PostgreSQL database name (when postgresql chart enabled)
    database: redash

# externalRedis -- External Redis configuration. To use an external Redis instead of the automatically deployed redis chart: set redis.enabled to false then uncomment and configure the externalRedis connection URL (e.g. redis://user:pass@host:6379/database).
externalRedis:
# externalRedisSecret -- Read external Redis configuration from a secret. This should point at a secret file with a single key which specifies the connection string.
externalRedisSecret:
  {}
  # name: redash-redis
  # key: connectionString

## Configuration values for the redis dependency. This Redis instance is used by default for caching and temporary storage [ref](https://github.com/bitnami/charts/blob/main/bitnami/redis/README.md)
redis:
  # redis.enabled -- Whether to deploy a Redis server to satisfy the applications database requirements. To use an external Redis set this to false and configure the externalRedis parameter.
  enabled: true
  database: 0
  master:
    service:
      ports:
        redis: 6379
  replica:
    replicaCount: 0

# extraObjects -- Additional kubernetes manifests to deploy alongside the chart. Useful to include external secrets for dependencies.
extraObjects: []
# - apiVersion: mumoshu.github.io/v1alpha1
#   kind: AWSSecret
#   metadata:
#     name: redash-postgres
#   spec:
#     stringDataFrom:
#       secretsManagerSecretRef:
#         secretId: redash-postgres-prod
#         versionId: 00000000-1111-2222-3333-444444444444
